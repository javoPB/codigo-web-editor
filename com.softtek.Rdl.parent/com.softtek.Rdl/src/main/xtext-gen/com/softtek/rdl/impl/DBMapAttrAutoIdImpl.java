/**
 * generated by Xtext 2.16.0
 */
package com.softtek.rdl.impl;

import com.softtek.rdl.DBMapAttrAutoId;
import com.softtek.rdl.RdlPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DB Map Attr Auto Id</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.softtek.rdl.impl.DBMapAttrAutoIdImpl#getAutoid <em>Autoid</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DBMapAttrAutoIdImpl extends DBMapAttrImpl implements DBMapAttrAutoId
{
  /**
   * The default value of the '{@link #getAutoid() <em>Autoid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAutoid()
   * @generated
   * @ordered
   */
  protected static final String AUTOID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAutoid() <em>Autoid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAutoid()
   * @generated
   * @ordered
   */
  protected String autoid = AUTOID_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DBMapAttrAutoIdImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RdlPackage.Literals.DB_MAP_ATTR_AUTO_ID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAutoid()
  {
    return autoid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAutoid(String newAutoid)
  {
    String oldAutoid = autoid;
    autoid = newAutoid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.DB_MAP_ATTR_AUTO_ID__AUTOID, oldAutoid, autoid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RdlPackage.DB_MAP_ATTR_AUTO_ID__AUTOID:
        return getAutoid();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RdlPackage.DB_MAP_ATTR_AUTO_ID__AUTOID:
        setAutoid((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RdlPackage.DB_MAP_ATTR_AUTO_ID__AUTOID:
        setAutoid(AUTOID_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RdlPackage.DB_MAP_ATTR_AUTO_ID__AUTOID:
        return AUTOID_EDEFAULT == null ? autoid != null : !AUTOID_EDEFAULT.equals(autoid);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (autoid: ");
    result.append(autoid);
    result.append(')');
    return result.toString();
  }

} //DBMapAttrAutoIdImpl
