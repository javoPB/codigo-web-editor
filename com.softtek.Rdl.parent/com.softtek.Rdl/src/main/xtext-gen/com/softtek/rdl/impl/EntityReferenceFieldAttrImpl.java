/**
 * generated by Xtext 2.16.0
 */
package com.softtek.rdl.impl;

import com.softtek.rdl.BusinessRule;
import com.softtek.rdl.DBMapField;
import com.softtek.rdl.DataDomain;
import com.softtek.rdl.EntityReferenceFieldAttr;
import com.softtek.rdl.EntityTextConstraintDef;
import com.softtek.rdl.Glossary;
import com.softtek.rdl.RdlPackage;
import com.softtek.rdl.WidgetEnum;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Reference Field Attr</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getGlossary <em>Glossary</em>}</li>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getWidget <em>Widget</em>}</li>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getConstraint <em>Constraint</em>}</li>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getDb_map <em>Db map</em>}</li>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getData_domain <em>Data domain</em>}</li>
 *   <li>{@link com.softtek.rdl.impl.EntityReferenceFieldAttrImpl#getBusiness_rule <em>Business rule</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityReferenceFieldAttrImpl extends MinimalEObjectImpl.Container implements EntityReferenceFieldAttr
{
  /**
   * The cached value of the '{@link #getGlossary() <em>Glossary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlossary()
   * @generated
   * @ordered
   */
  protected Glossary glossary;

  /**
   * The cached value of the '{@link #getWidget() <em>Widget</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidget()
   * @generated
   * @ordered
   */
  protected WidgetEnum widget;

  /**
   * The cached value of the '{@link #getConstraint() <em>Constraint</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraint()
   * @generated
   * @ordered
   */
  protected EntityTextConstraintDef constraint;

  /**
   * The cached value of the '{@link #getDb_map() <em>Db map</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDb_map()
   * @generated
   * @ordered
   */
  protected DBMapField db_map;

  /**
   * The cached value of the '{@link #getData_domain() <em>Data domain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData_domain()
   * @generated
   * @ordered
   */
  protected DataDomain data_domain;

  /**
   * The cached value of the '{@link #getBusiness_rule() <em>Business rule</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBusiness_rule()
   * @generated
   * @ordered
   */
  protected BusinessRule business_rule;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityReferenceFieldAttrImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RdlPackage.Literals.ENTITY_REFERENCE_FIELD_ATTR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Glossary getGlossary()
  {
    return glossary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGlossary(Glossary newGlossary, NotificationChain msgs)
  {
    Glossary oldGlossary = glossary;
    glossary = newGlossary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY, oldGlossary, newGlossary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGlossary(Glossary newGlossary)
  {
    if (newGlossary != glossary)
    {
      NotificationChain msgs = null;
      if (glossary != null)
        msgs = ((InternalEObject)glossary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY, null, msgs);
      if (newGlossary != null)
        msgs = ((InternalEObject)newGlossary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY, null, msgs);
      msgs = basicSetGlossary(newGlossary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY, newGlossary, newGlossary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WidgetEnum getWidget()
  {
    return widget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWidget(WidgetEnum newWidget, NotificationChain msgs)
  {
    WidgetEnum oldWidget = widget;
    widget = newWidget;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET, oldWidget, newWidget);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWidget(WidgetEnum newWidget)
  {
    if (newWidget != widget)
    {
      NotificationChain msgs = null;
      if (widget != null)
        msgs = ((InternalEObject)widget).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET, null, msgs);
      if (newWidget != null)
        msgs = ((InternalEObject)newWidget).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET, null, msgs);
      msgs = basicSetWidget(newWidget, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET, newWidget, newWidget));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntityTextConstraintDef getConstraint()
  {
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstraint(EntityTextConstraintDef newConstraint, NotificationChain msgs)
  {
    EntityTextConstraintDef oldConstraint = constraint;
    constraint = newConstraint;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT, oldConstraint, newConstraint);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstraint(EntityTextConstraintDef newConstraint)
  {
    if (newConstraint != constraint)
    {
      NotificationChain msgs = null;
      if (constraint != null)
        msgs = ((InternalEObject)constraint).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT, null, msgs);
      if (newConstraint != null)
        msgs = ((InternalEObject)newConstraint).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT, null, msgs);
      msgs = basicSetConstraint(newConstraint, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT, newConstraint, newConstraint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DBMapField getDb_map()
  {
    return db_map;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDb_map(DBMapField newDb_map, NotificationChain msgs)
  {
    DBMapField oldDb_map = db_map;
    db_map = newDb_map;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP, oldDb_map, newDb_map);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDb_map(DBMapField newDb_map)
  {
    if (newDb_map != db_map)
    {
      NotificationChain msgs = null;
      if (db_map != null)
        msgs = ((InternalEObject)db_map).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP, null, msgs);
      if (newDb_map != null)
        msgs = ((InternalEObject)newDb_map).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP, null, msgs);
      msgs = basicSetDb_map(newDb_map, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP, newDb_map, newDb_map));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDomain getData_domain()
  {
    return data_domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData_domain(DataDomain newData_domain, NotificationChain msgs)
  {
    DataDomain oldData_domain = data_domain;
    data_domain = newData_domain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN, oldData_domain, newData_domain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setData_domain(DataDomain newData_domain)
  {
    if (newData_domain != data_domain)
    {
      NotificationChain msgs = null;
      if (data_domain != null)
        msgs = ((InternalEObject)data_domain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN, null, msgs);
      if (newData_domain != null)
        msgs = ((InternalEObject)newData_domain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN, null, msgs);
      msgs = basicSetData_domain(newData_domain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN, newData_domain, newData_domain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BusinessRule getBusiness_rule()
  {
    return business_rule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBusiness_rule(BusinessRule newBusiness_rule, NotificationChain msgs)
  {
    BusinessRule oldBusiness_rule = business_rule;
    business_rule = newBusiness_rule;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE, oldBusiness_rule, newBusiness_rule);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBusiness_rule(BusinessRule newBusiness_rule)
  {
    if (newBusiness_rule != business_rule)
    {
      NotificationChain msgs = null;
      if (business_rule != null)
        msgs = ((InternalEObject)business_rule).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE, null, msgs);
      if (newBusiness_rule != null)
        msgs = ((InternalEObject)newBusiness_rule).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE, null, msgs);
      msgs = basicSetBusiness_rule(newBusiness_rule, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE, newBusiness_rule, newBusiness_rule));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY:
        return basicSetGlossary(null, msgs);
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET:
        return basicSetWidget(null, msgs);
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT:
        return basicSetConstraint(null, msgs);
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP:
        return basicSetDb_map(null, msgs);
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN:
        return basicSetData_domain(null, msgs);
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE:
        return basicSetBusiness_rule(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY:
        return getGlossary();
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET:
        return getWidget();
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT:
        return getConstraint();
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP:
        return getDb_map();
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN:
        return getData_domain();
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE:
        return getBusiness_rule();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY:
        setGlossary((Glossary)newValue);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET:
        setWidget((WidgetEnum)newValue);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT:
        setConstraint((EntityTextConstraintDef)newValue);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP:
        setDb_map((DBMapField)newValue);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN:
        setData_domain((DataDomain)newValue);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE:
        setBusiness_rule((BusinessRule)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY:
        setGlossary((Glossary)null);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET:
        setWidget((WidgetEnum)null);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT:
        setConstraint((EntityTextConstraintDef)null);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP:
        setDb_map((DBMapField)null);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN:
        setData_domain((DataDomain)null);
        return;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE:
        setBusiness_rule((BusinessRule)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__GLOSSARY:
        return glossary != null;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__WIDGET:
        return widget != null;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__CONSTRAINT:
        return constraint != null;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DB_MAP:
        return db_map != null;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__DATA_DOMAIN:
        return data_domain != null;
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR__BUSINESS_RULE:
        return business_rule != null;
    }
    return super.eIsSet(featureID);
  }

} //EntityReferenceFieldAttrImpl
