/**
 * generated by Xtext 2.16.0
 */
package com.softtek.rdl.util;

import com.softtek.rdl.AbstractElement;
import com.softtek.rdl.Action;
import com.softtek.rdl.ActionAdd;
import com.softtek.rdl.ActionDelete;
import com.softtek.rdl.ActionEdit;
import com.softtek.rdl.ActionSearch;
import com.softtek.rdl.Actions;
import com.softtek.rdl.BusinessRule;
import com.softtek.rdl.ConstraintMaxLength;
import com.softtek.rdl.ConstraintMinLength;
import com.softtek.rdl.ConstraintRequired;
import com.softtek.rdl.ConstraintUnique;
import com.softtek.rdl.DATE;
import com.softtek.rdl.DBMapAttr;
import com.softtek.rdl.DBMapAttrAutoId;
import com.softtek.rdl.DBMapAttrIdentity;
import com.softtek.rdl.DBMapEntity;
import com.softtek.rdl.DBMapField;
import com.softtek.rdl.DataDomain;
import com.softtek.rdl.Entity;
import com.softtek.rdl.EntityAttr;
import com.softtek.rdl.EntityCurrencyField;
import com.softtek.rdl.EntityDateField;
import com.softtek.rdl.EntityDateFieldAttr;
import com.softtek.rdl.EntityDecimalField;
import com.softtek.rdl.EntityEmailField;
import com.softtek.rdl.EntityField;
import com.softtek.rdl.EntityFileField;
import com.softtek.rdl.EntityImageField;
import com.softtek.rdl.EntityIntegerField;
import com.softtek.rdl.EntityLongTextField;
import com.softtek.rdl.EntityLongTextFieldAttr;
import com.softtek.rdl.EntityReferenceField;
import com.softtek.rdl.EntityReferenceFieldAttr;
import com.softtek.rdl.EntityTextConstraint;
import com.softtek.rdl.EntityTextConstraintDef;
import com.softtek.rdl.EntityTextField;
import com.softtek.rdl.EntityTextFieldAttr;
import com.softtek.rdl.EnumEntity;
import com.softtek.rdl.EnumLiteral;
import com.softtek.rdl.Glossary;
import com.softtek.rdl.GlossaryDescription;
import com.softtek.rdl.GlossaryName;
import com.softtek.rdl.MethodDeclaration;
import com.softtek.rdl.Model;
import com.softtek.rdl.Module;
import com.softtek.rdl.RdlPackage;
import com.softtek.rdl.Statement;
import com.softtek.rdl.StatementReturn;
import com.softtek.rdl.Widget;
import com.softtek.rdl.WidgetAttr;
import com.softtek.rdl.WidgetAttrDate;
import com.softtek.rdl.WidgetAttrEnum;
import com.softtek.rdl.WidgetAttrEnumType;
import com.softtek.rdl.WidgetAttrEnumTypeSelect;
import com.softtek.rdl.WidgetAttrText;
import com.softtek.rdl.WidgetDate;
import com.softtek.rdl.WidgetDisplayResult;
import com.softtek.rdl.WidgetEndYear;
import com.softtek.rdl.WidgetEnum;
import com.softtek.rdl.WidgetExposedFilter;
import com.softtek.rdl.WidgetHelp;
import com.softtek.rdl.WidgetLabel;
import com.softtek.rdl.WidgetSize;
import com.softtek.rdl.WidgetSortBy;
import com.softtek.rdl.WidgetStartYear;
import com.softtek.rdl.WidgetText;
import com.softtek.rdl.WidgetType;
import com.softtek.rdl.WidgetTypeSelect;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.softtek.rdl.RdlPackage
 * @generated
 */
public class RdlSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RdlPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RdlSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = RdlPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case RdlPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.MODULE:
      {
        Module module = (Module)theEObject;
        T result = caseModule(module);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ABSTRACT_ELEMENT:
      {
        AbstractElement abstractElement = (AbstractElement)theEObject;
        T result = caseAbstractElement(abstractElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENUM:
      {
        com.softtek.rdl.Enum enum_ = (com.softtek.rdl.Enum)theEObject;
        T result = caseEnum(enum_);
        if (result == null) result = caseAbstractElement(enum_);
        if (result == null) result = caseEnumEntity(enum_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENUM_LITERAL:
      {
        EnumLiteral enumLiteral = (EnumLiteral)theEObject;
        T result = caseEnumLiteral(enumLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = caseAbstractElement(entity);
        if (result == null) result = caseEnumEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.METHOD_DECLARATION:
      {
        MethodDeclaration methodDeclaration = (MethodDeclaration)theEObject;
        T result = caseMethodDeclaration(methodDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.STATEMENT:
      {
        Statement statement = (Statement)theEObject;
        T result = caseStatement(statement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.STATEMENT_RETURN:
      {
        StatementReturn statementReturn = (StatementReturn)theEObject;
        T result = caseStatementReturn(statementReturn);
        if (result == null) result = caseStatement(statementReturn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_FIELD:
      {
        EntityField entityField = (EntityField)theEObject;
        T result = caseEntityField(entityField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_TEXT_CONSTRAINT_DEF:
      {
        EntityTextConstraintDef entityTextConstraintDef = (EntityTextConstraintDef)theEObject;
        T result = caseEntityTextConstraintDef(entityTextConstraintDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_TEXT_CONSTRAINT:
      {
        EntityTextConstraint entityTextConstraint = (EntityTextConstraint)theEObject;
        T result = caseEntityTextConstraint(entityTextConstraint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_TEXT_FIELD:
      {
        EntityTextField entityTextField = (EntityTextField)theEObject;
        T result = caseEntityTextField(entityTextField);
        if (result == null) result = caseEntityField(entityTextField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_TEXT_FIELD_ATTR:
      {
        EntityTextFieldAttr entityTextFieldAttr = (EntityTextFieldAttr)theEObject;
        T result = caseEntityTextFieldAttr(entityTextFieldAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_LONG_TEXT_FIELD:
      {
        EntityLongTextField entityLongTextField = (EntityLongTextField)theEObject;
        T result = caseEntityLongTextField(entityLongTextField);
        if (result == null) result = caseEntityField(entityLongTextField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_LONG_TEXT_FIELD_ATTR:
      {
        EntityLongTextFieldAttr entityLongTextFieldAttr = (EntityLongTextFieldAttr)theEObject;
        T result = caseEntityLongTextFieldAttr(entityLongTextFieldAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_DATE_FIELD:
      {
        EntityDateField entityDateField = (EntityDateField)theEObject;
        T result = caseEntityDateField(entityDateField);
        if (result == null) result = caseEntityField(entityDateField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_DATE_FIELD_ATTR:
      {
        EntityDateFieldAttr entityDateFieldAttr = (EntityDateFieldAttr)theEObject;
        T result = caseEntityDateFieldAttr(entityDateFieldAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_REFERENCE_FIELD:
      {
        EntityReferenceField entityReferenceField = (EntityReferenceField)theEObject;
        T result = caseEntityReferenceField(entityReferenceField);
        if (result == null) result = caseEntityField(entityReferenceField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_REFERENCE_FIELD_ATTR:
      {
        EntityReferenceFieldAttr entityReferenceFieldAttr = (EntityReferenceFieldAttr)theEObject;
        T result = caseEntityReferenceFieldAttr(entityReferenceFieldAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENUM_ENTITY:
      {
        EnumEntity enumEntity = (EnumEntity)theEObject;
        T result = caseEnumEntity(enumEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_IMAGE_FIELD:
      {
        EntityImageField entityImageField = (EntityImageField)theEObject;
        T result = caseEntityImageField(entityImageField);
        if (result == null) result = caseEntityField(entityImageField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_FILE_FIELD:
      {
        EntityFileField entityFileField = (EntityFileField)theEObject;
        T result = caseEntityFileField(entityFileField);
        if (result == null) result = caseEntityField(entityFileField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_EMAIL_FIELD:
      {
        EntityEmailField entityEmailField = (EntityEmailField)theEObject;
        T result = caseEntityEmailField(entityEmailField);
        if (result == null) result = caseEntityField(entityEmailField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_DECIMAL_FIELD:
      {
        EntityDecimalField entityDecimalField = (EntityDecimalField)theEObject;
        T result = caseEntityDecimalField(entityDecimalField);
        if (result == null) result = caseEntityField(entityDecimalField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_INTEGER_FIELD:
      {
        EntityIntegerField entityIntegerField = (EntityIntegerField)theEObject;
        T result = caseEntityIntegerField(entityIntegerField);
        if (result == null) result = caseEntityField(entityIntegerField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_CURRENCY_FIELD:
      {
        EntityCurrencyField entityCurrencyField = (EntityCurrencyField)theEObject;
        T result = caseEntityCurrencyField(entityCurrencyField);
        if (result == null) result = caseEntityField(entityCurrencyField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ENTITY_ATTR:
      {
        EntityAttr entityAttr = (EntityAttr)theEObject;
        T result = caseEntityAttr(entityAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.CONSTRAINT_REQUIRED:
      {
        ConstraintRequired constraintRequired = (ConstraintRequired)theEObject;
        T result = caseConstraintRequired(constraintRequired);
        if (result == null) result = caseEntityTextConstraint(constraintRequired);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.CONSTRAINT_UNIQUE:
      {
        ConstraintUnique constraintUnique = (ConstraintUnique)theEObject;
        T result = caseConstraintUnique(constraintUnique);
        if (result == null) result = caseEntityTextConstraint(constraintUnique);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.CONSTRAINT_MAX_LENGTH:
      {
        ConstraintMaxLength constraintMaxLength = (ConstraintMaxLength)theEObject;
        T result = caseConstraintMaxLength(constraintMaxLength);
        if (result == null) result = caseEntityTextConstraint(constraintMaxLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.CONSTRAINT_MIN_LENGTH:
      {
        ConstraintMinLength constraintMinLength = (ConstraintMinLength)theEObject;
        T result = caseConstraintMinLength(constraintMinLength);
        if (result == null) result = caseEntityTextConstraint(constraintMinLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.GLOSSARY:
      {
        Glossary glossary = (Glossary)theEObject;
        T result = caseGlossary(glossary);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.GLOSSARY_NAME:
      {
        GlossaryName glossaryName = (GlossaryName)theEObject;
        T result = caseGlossaryName(glossaryName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.GLOSSARY_DESCRIPTION:
      {
        GlossaryDescription glossaryDescription = (GlossaryDescription)theEObject;
        T result = caseGlossaryDescription(glossaryDescription);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_LABEL:
      {
        WidgetLabel widgetLabel = (WidgetLabel)theEObject;
        T result = caseWidgetLabel(widgetLabel);
        if (result == null) result = caseWidgetAttr(widgetLabel);
        if (result == null) result = caseWidgetAttrEnumType(widgetLabel);
        if (result == null) result = caseWidgetAttrDate(widgetLabel);
        if (result == null) result = caseWidgetAttrText(widgetLabel);
        if (result == null) result = caseWidgetAttrEnum(widgetLabel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_HELP:
      {
        WidgetHelp widgetHelp = (WidgetHelp)theEObject;
        T result = caseWidgetHelp(widgetHelp);
        if (result == null) result = caseWidgetAttr(widgetHelp);
        if (result == null) result = caseWidgetAttrEnumType(widgetHelp);
        if (result == null) result = caseWidgetAttrDate(widgetHelp);
        if (result == null) result = caseWidgetAttrText(widgetHelp);
        if (result == null) result = caseWidgetAttrEnum(widgetHelp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_EXPOSED_FILTER:
      {
        WidgetExposedFilter widgetExposedFilter = (WidgetExposedFilter)theEObject;
        T result = caseWidgetExposedFilter(widgetExposedFilter);
        if (result == null) result = caseWidgetAttr(widgetExposedFilter);
        if (result == null) result = caseWidgetAttrEnumType(widgetExposedFilter);
        if (result == null) result = caseWidgetAttrDate(widgetExposedFilter);
        if (result == null) result = caseWidgetAttrText(widgetExposedFilter);
        if (result == null) result = caseWidgetAttrEnum(widgetExposedFilter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_TYPE:
      {
        WidgetType widgetType = (WidgetType)theEObject;
        T result = caseWidgetType(widgetType);
        if (result == null) result = caseWidgetAttrEnumType(widgetType);
        if (result == null) result = caseWidgetAttrEnum(widgetType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_TYPE_SELECT:
      {
        WidgetTypeSelect widgetTypeSelect = (WidgetTypeSelect)theEObject;
        T result = caseWidgetTypeSelect(widgetTypeSelect);
        if (result == null) result = caseWidgetAttrEnumTypeSelect(widgetTypeSelect);
        if (result == null) result = caseWidgetAttrEnum(widgetTypeSelect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_SORT_BY:
      {
        WidgetSortBy widgetSortBy = (WidgetSortBy)theEObject;
        T result = caseWidgetSortBy(widgetSortBy);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_START_YEAR:
      {
        WidgetStartYear widgetStartYear = (WidgetStartYear)theEObject;
        T result = caseWidgetStartYear(widgetStartYear);
        if (result == null) result = caseWidgetAttrDate(widgetStartYear);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_END_YEAR:
      {
        WidgetEndYear widgetEndYear = (WidgetEndYear)theEObject;
        T result = caseWidgetEndYear(widgetEndYear);
        if (result == null) result = caseWidgetAttrDate(widgetEndYear);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET:
      {
        Widget widget = (Widget)theEObject;
        T result = caseWidget(widget);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ENUM:
      {
        WidgetEnum widgetEnum = (WidgetEnum)theEObject;
        T result = caseWidgetEnum(widgetEnum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_DATE:
      {
        WidgetDate widgetDate = (WidgetDate)theEObject;
        T result = caseWidgetDate(widgetDate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_TEXT:
      {
        WidgetText widgetText = (WidgetText)theEObject;
        T result = caseWidgetText(widgetText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR:
      {
        WidgetAttr widgetAttr = (WidgetAttr)theEObject;
        T result = caseWidgetAttr(widgetAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR_ENUM:
      {
        WidgetAttrEnum widgetAttrEnum = (WidgetAttrEnum)theEObject;
        T result = caseWidgetAttrEnum(widgetAttrEnum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR_ENUM_TYPE:
      {
        WidgetAttrEnumType widgetAttrEnumType = (WidgetAttrEnumType)theEObject;
        T result = caseWidgetAttrEnumType(widgetAttrEnumType);
        if (result == null) result = caseWidgetAttrEnum(widgetAttrEnumType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR_ENUM_TYPE_SELECT:
      {
        WidgetAttrEnumTypeSelect widgetAttrEnumTypeSelect = (WidgetAttrEnumTypeSelect)theEObject;
        T result = caseWidgetAttrEnumTypeSelect(widgetAttrEnumTypeSelect);
        if (result == null) result = caseWidgetAttrEnum(widgetAttrEnumTypeSelect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR_DATE:
      {
        WidgetAttrDate widgetAttrDate = (WidgetAttrDate)theEObject;
        T result = caseWidgetAttrDate(widgetAttrDate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_ATTR_TEXT:
      {
        WidgetAttrText widgetAttrText = (WidgetAttrText)theEObject;
        T result = caseWidgetAttrText(widgetAttrText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_SIZE:
      {
        WidgetSize widgetSize = (WidgetSize)theEObject;
        T result = caseWidgetSize(widgetSize);
        if (result == null) result = caseWidgetAttrText(widgetSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.WIDGET_DISPLAY_RESULT:
      {
        WidgetDisplayResult widgetDisplayResult = (WidgetDisplayResult)theEObject;
        T result = caseWidgetDisplayResult(widgetDisplayResult);
        if (result == null) result = caseWidgetAttr(widgetDisplayResult);
        if (result == null) result = caseWidgetAttrEnum(widgetDisplayResult);
        if (result == null) result = caseWidgetAttrDate(widgetDisplayResult);
        if (result == null) result = caseWidgetAttrText(widgetDisplayResult);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DATE:
      {
        DATE date = (DATE)theEObject;
        T result = caseDATE(date);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTION_SEARCH:
      {
        ActionSearch actionSearch = (ActionSearch)theEObject;
        T result = caseActionSearch(actionSearch);
        if (result == null) result = caseAction(actionSearch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTION_ADD:
      {
        ActionAdd actionAdd = (ActionAdd)theEObject;
        T result = caseActionAdd(actionAdd);
        if (result == null) result = caseAction(actionAdd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTION_EDIT:
      {
        ActionEdit actionEdit = (ActionEdit)theEObject;
        T result = caseActionEdit(actionEdit);
        if (result == null) result = caseAction(actionEdit);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTION_DELETE:
      {
        ActionDelete actionDelete = (ActionDelete)theEObject;
        T result = caseActionDelete(actionDelete);
        if (result == null) result = caseAction(actionDelete);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.ACTIONS:
      {
        Actions actions = (Actions)theEObject;
        T result = caseActions(actions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DB_MAP_ENTITY:
      {
        DBMapEntity dbMapEntity = (DBMapEntity)theEObject;
        T result = caseDBMapEntity(dbMapEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DB_MAP_ATTR:
      {
        DBMapAttr dbMapAttr = (DBMapAttr)theEObject;
        T result = caseDBMapAttr(dbMapAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DB_MAP_ATTR_IDENTITY:
      {
        DBMapAttrIdentity dbMapAttrIdentity = (DBMapAttrIdentity)theEObject;
        T result = caseDBMapAttrIdentity(dbMapAttrIdentity);
        if (result == null) result = caseDBMapAttr(dbMapAttrIdentity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DB_MAP_ATTR_AUTO_ID:
      {
        DBMapAttrAutoId dbMapAttrAutoId = (DBMapAttrAutoId)theEObject;
        T result = caseDBMapAttrAutoId(dbMapAttrAutoId);
        if (result == null) result = caseDBMapAttr(dbMapAttrAutoId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DB_MAP_FIELD:
      {
        DBMapField dbMapField = (DBMapField)theEObject;
        T result = caseDBMapField(dbMapField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.DATA_DOMAIN:
      {
        DataDomain dataDomain = (DataDomain)theEObject;
        T result = caseDataDomain(dataDomain);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdlPackage.BUSINESS_RULE:
      {
        BusinessRule businessRule = (BusinessRule)theEObject;
        T result = caseBusinessRule(businessRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Module</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Module</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModule(Module object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractElement(AbstractElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnum(com.softtek.rdl.Enum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumLiteral(EnumLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Method Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Method Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMethodDeclaration(MethodDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatement(Statement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement Return</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement Return</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatementReturn(StatementReturn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityField(EntityField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Text Constraint Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Text Constraint Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityTextConstraintDef(EntityTextConstraintDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Text Constraint</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Text Constraint</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityTextConstraint(EntityTextConstraint object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Text Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Text Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityTextField(EntityTextField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Text Field Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Text Field Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityTextFieldAttr(EntityTextFieldAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Long Text Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Long Text Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityLongTextField(EntityLongTextField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Long Text Field Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Long Text Field Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityLongTextFieldAttr(EntityLongTextFieldAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Date Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Date Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityDateField(EntityDateField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Date Field Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Date Field Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityDateFieldAttr(EntityDateFieldAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Reference Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Reference Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityReferenceField(EntityReferenceField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Reference Field Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Reference Field Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityReferenceFieldAttr(EntityReferenceFieldAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumEntity(EnumEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Image Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Image Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityImageField(EntityImageField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity File Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity File Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityFileField(EntityFileField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Email Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Email Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityEmailField(EntityEmailField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Decimal Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Decimal Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityDecimalField(EntityDecimalField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Integer Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Integer Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityIntegerField(EntityIntegerField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Currency Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Currency Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityCurrencyField(EntityCurrencyField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntityAttr(EntityAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Required</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Required</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintRequired(ConstraintRequired object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Unique</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Unique</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintUnique(ConstraintUnique object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Max Length</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Max Length</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintMaxLength(ConstraintMaxLength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constraint Min Length</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constraint Min Length</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstraintMinLength(ConstraintMinLength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Glossary</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Glossary</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlossary(Glossary object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Glossary Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Glossary Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlossaryName(GlossaryName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Glossary Description</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Glossary Description</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlossaryDescription(GlossaryDescription object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Label</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Label</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetLabel(WidgetLabel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Help</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Help</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetHelp(WidgetHelp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Exposed Filter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Exposed Filter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetExposedFilter(WidgetExposedFilter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetType(WidgetType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Type Select</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Type Select</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetTypeSelect(WidgetTypeSelect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Sort By</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Sort By</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetSortBy(WidgetSortBy object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Start Year</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Start Year</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetStartYear(WidgetStartYear object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget End Year</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget End Year</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetEndYear(WidgetEndYear object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidget(Widget object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Enum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Enum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetEnum(WidgetEnum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Date</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Date</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetDate(WidgetDate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetText(WidgetText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttr(WidgetAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr Enum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr Enum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttrEnum(WidgetAttrEnum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr Enum Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr Enum Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttrEnumType(WidgetAttrEnumType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr Enum Type Select</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr Enum Type Select</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttrEnumTypeSelect(WidgetAttrEnumTypeSelect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr Date</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr Date</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttrDate(WidgetAttrDate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Attr Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Attr Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetAttrText(WidgetAttrText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetSize(WidgetSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Widget Display Result</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Widget Display Result</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWidgetDisplayResult(WidgetDisplayResult object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DATE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DATE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDATE(DATE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Search</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Search</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionSearch(ActionSearch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Add</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Add</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionAdd(ActionAdd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Edit</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Edit</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionEdit(ActionEdit object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action Delete</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action Delete</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionDelete(ActionDelete object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Actions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Actions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActions(Actions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Map Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Map Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBMapEntity(DBMapEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Map Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Map Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBMapAttr(DBMapAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Map Attr Identity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Map Attr Identity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBMapAttrIdentity(DBMapAttrIdentity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Map Attr Auto Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Map Attr Auto Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBMapAttrAutoId(DBMapAttrAutoId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Map Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Map Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBMapField(DBMapField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Domain</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Domain</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataDomain(DataDomain object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Business Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Business Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBusinessRule(BusinessRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //RdlSwitch
